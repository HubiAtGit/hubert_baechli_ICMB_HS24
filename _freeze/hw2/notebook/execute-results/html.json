{
  "hash": "305703b7e615f231fe97c502cbb6e456",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Notebook\"\nauthor: \"Hubert Baechli\"\n---\n\n\n\n\n# Final Version\n\n## Definitions\n\nAt beginning I load some packets for nicer plots.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(tidyr)\nlibrary(dplyr)\n```\n:::\n\n\n\n\nStart Population from the paper (PopNorm) with less Agents to spend calculationtime\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnA = 1000         # number of Agents\nID = seq_len(nA)  # ID of the Agents\nM0pop = 150       # Mean amount of Money in the Start-Population\n\n# generating Start-Population\n\nPopNorm <- data.frame( ID = ID,\n                       Money= sort(rnorm(nA, mean = M0pop, sd = 0.2 * M0pop))\n                      )\n```\n:::\n\n\n\n\nPlot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(PopNorm, aes(x = Money)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, bins = 50, fill = 4) +\n  ylab(\"Frequency\") +\n  scale_fill_manual(values = 4) +\n  theme_minimal() +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](notebook_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsplitpair <- function(){\n  rn <- runif(1)\n  c(rn,1-rn)\n}\nsplitpair()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6352625 0.3647375\n```\n\n\n:::\n:::\n\n\n\n\ncalculating the Probability for the next exchange\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalc_p <- function(M_dist) {\n  Dist <- data.frame(Money = M_dist,\n                     probwin = 0,\n                     probmed = 0,\n                     probmean = 0\n                     )\n  Sum <- data.frame(Money = c(min(Dist$Money),\n                              max(Dist$Money),\n                              median(Dist$Money),\n                              mean(Dist$Money)\n                              ),\n                    probwin = 0,\n                    probmed = 0,\n                    probmean = 0\n                    )\n  rownames(Sum) <- c(\"min\", \"max\", \"med\", \"mean\")\n  M_Med <- Sum[\"med\", \"Money\"]\n  M_Mean <- Sum[\"mean\", \"Money\"]\n  for(i in 1:nrow(Dist)) {\n    M_A <- Dist[i,\"Money\"]\n    M_oA <- Dist[c(-i),\"Money\"]\n    pwin <- M_oA*0\n    pmed <- M_oA*0\n    pmean <- M_oA*0\n    for(ii in 1:NROW(M_oA)) {\n      Pot <- max(M_A + M_oA[ii], 10e-8)\n      pwin[ii] <- 1-min(1, M_A/Pot)\n      pmed[ii] <- 1-min(1, M_Med/Pot)\n      pmean[ii] <- 1-min(1, M_Mean/Pot)\n    }\n    Dist[i,\"probwin\"] <- mean(pwin)\n    Dist[i,\"probmed\"] <- mean(pmed)\n    Dist[i,\"probmean\"] <- mean(pmean)\n  }\n  for (i in c(\"probwin\",\"probmed\",\"probmean\")) {\n    Sum[[i]] = c(min(Dist[[i]]),\n                    max(Dist[[i]]),\n                    median(Dist[[i]]),\n                    mean(Dist[[i]])\n    )\n  }\n\n  Output <- list(Sum = Sum, Dist = Dist)\n  return(Output)\n}\n```\n:::\n\n\n\n\nCalculating for Normpopulation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nProbNorm <- calc_p(PopNorm$Money)\n```\n:::\n\n\n\n\nplot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfigProb <- function(Prob, Title, xmax) {\n  Figd <- pivot_longer(data.frame(Prob$Dist),\n                       cols = starts_with(\"p\"),\n                       names_to = \"Outcome\",\n                       values_to = \"Probability\"\n                       )\n  Figs <- Prob$Sum\n\n  Figp <- ggplot(data = Figd,\n                 aes(x = Money,\n                     y = Probability,\n                     color = Outcome\n                     )\n                 ) +\n    geom_point( alpha = 0.5, size = 1.5) +\n    scale_color_manual(name = \"Probability to\",\n                       values = c(2, 3, 4),\n                       labels = c(\"gain more than the Mean\",\n                                  \"gain more than the Median\",\n                                  \"gain\")\n                       ) +\n    ylim(0, 1) +\n    xlim(0, xmax) +\n\n    geom_vline(xintercept = Figs[\"med\",\"Money\"],\n               linetype = \"solid\", color = 1) +\n    annotate(\"text\",\n             x = Figs[\"med\",\"Money\"] * 0.95,\n             y = 0,\n             hjust = 1,\n             vjust = 0,\n             label = paste(\"Median =\",\n                           round(Figs[\"med\",\"Money\"], 0)),\n             color = 1) +\n\n    geom_vline(xintercept = Figs[\"mean\",\"Money\"],\n               linetype = \"dashed\", color = 1) +\n    annotate(\"text\",\n             x = Figs[\"mean\",\"Money\"] * 1.05,\n             y = 0,\n             hjust = 0,\n             vjust = 0,\n             label = paste(\"Mean =\",\n                           round(Figs[\"mean\",\"Money\"], 0)),\n             color = 1) +\n\n    geom_hline(yintercept = Figs[\"mean\",\"probmed\"],\n             linetype = \"solid\", color = 3) +\n    annotate(\"text\",\n             x = xmax,\n             y = Figs[\"mean\",\"probmed\"] * 1.05,\n             hjust = 1,\n             vjust = 0,\n             label = paste(\"Mean =\",\n                           round(Figs[\"mean\",\"probmed\"], 2)),\n             color = 3) +\n\n    geom_hline(yintercept = Figs[\"mean\",\"probmean\"],\n               linetype = \"solid\", color = 2) +\n    annotate(\"text\",\n             x = xmax,\n             y = Figs[\"mean\",\"probmean\"]*0.95,\n             hjust = 1,\n             vjust = 1,\n             label = paste(\"Mean =\",\n                           round(Figs[\"mean\",\"probmean\"], 2)),\n             color = 2) +\n\n    labs(title = Title) +\n    theme_light() +\n    theme(legend.position = \"bottom\")\n  return(Figp)\n}\n\nfigProb(ProbNorm, \"Probability at Beginning\", 300)\n```\n\n::: {.cell-output-display}\n![](notebook_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n# Simulation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\necosim <- function( n, M_dist, TL = 0 ) {\n  df <- data.frame(ID=seq(1,NROW(M_dist)),\n                   nE=0,\n                   MT_S=M_dist,\n                   MT_E=M_dist\n                   )\n  if (TL > 0) {\n    M_TL <- data.frame(n0 = df$MT_S)\n  }\n  for(i in 1:n) {\n    rdf <- sample(df$ID, size=2)\n    rds <- splitpair()\n    df[rdf,\"nE\"] <- df[rdf,\"nE\"] + 1\n    df[rdf,\"MT_E\"] <- sum( df[rdf,\"MT_E\"]) * rds\n    if ( TL > 0 ) {\n      if ( i %% TL == 0) {\n        M_TL [[paste0(\"n\",i)]]<- df$MT_E\n      }\n    }\n  }\n  Output <- list(\"Sum\" = df)\n  if ( TL > 0 ) {\n    rownames(M_TL) <- df$ID\n    Output$Timeline <- M_TL\n  }\n  return(Output)\n}\n```\n:::\n\n\n\n\nsimulieren\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- ecosim(50000, PopNorm$Money, TL = 500)\n```\n:::\n\n\n\n\nploten Histogram\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfigHist <- function(Sim_Sum) {\n  Fig <- pivot_longer(data.frame(Sim_Sum),\n                      cols = starts_with(\"MT\"),\n                      names_to = \"Distribution\",\n                      values_to = \"Money\"\n                      )\n  Fig$Distribution <-recode(Fig$Distribution,\n                            \"MT_S\" = \"at Begining\",\n                            \"MT_E\" = \"at the End\"\n                            )\n  Figp <- ggplot(Fig, aes(x = Money, fill = Distribution)) +\n    geom_histogram(position = \"identity\", alpha = 0.5, bins = 50) +\n    ylab(\"Frequency\") +\n    scale_fill_manual(name = NULL, values = c(4,3)) +\n    scale_color_manual(name = NULL, values = c(4, 3)) +\n    theme_minimal() +\n    theme(legend.position = \"top\")\n  return(Figp)\n}\n\nfigHist(df$Sum)\n```\n\n::: {.cell-output-display}\n![](notebook_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\nTimeline Money of 9 Agents\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMTime <- data.frame(ID,df$Timeline)\n\nsID <- c(1,2,3,nA/2-1,nA/2,nA/2+1,nA-2,nA-1,nA)\nsMTime <- MTime[sID,]\n\nFig03 <- pivot_longer(data.frame(sMTime),\n                      cols = !matches(\"ID\"),\n                      names_to = \"Time\",\n                      names_prefix = \"n\",\n                      names_transform = list(Time = as.integer),\n                      values_to = \"Money\"\n)\n\nFig03$ID <- sprintf(\"%04d\", Fig03$ID)\n\nggplot(data = Fig03, aes(x = Time, y = Money, color = ID)) +\n  geom_line() +\n  ggtitle(\"Timeline for seven Agents\") +\n  xlab(\"number of exchanges\") +\n  labs(color = \"Agents ID\") +\n  scale_color_manual(values = c(2,2,2, 1,1, 1,3,3,3)) +\n  theme_light() +\n  theme(legend.position = \"right\",\n        legend.background = element_rect(fill = \"white\"))\n```\n\n::: {.cell-output-display}\n![](notebook_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\nProbabilitiy at some Timepoints\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFigA <- figProb(calc_p(MTime[,2]), \"Probability at Beginning\", 850)\nFigB <- figProb(calc_p(MTime[,3]), \"Probability after 500 exchanges\", 850)\nFigC <- figProb(calc_p(MTime[,4]), \"Probability after 1000 exchanges\", 850)\nFigD <- figProb(calc_p(MTime[,NCOL(MTime)]), \"Probability at the End\", 850)\n\nFigA \n```\n\n::: {.cell-output-display}\n![](notebook_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nFigB\n```\n\n::: {.cell-output-display}\n![](notebook_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n```{.r .cell-code}\nFigC\n```\n\n::: {.cell-output-display}\n![](notebook_files/figure-html/unnamed-chunk-12-3.png){width=672}\n:::\n\n```{.r .cell-code}\nFigD\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 9 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](notebook_files/figure-html/unnamed-chunk-12-4.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}