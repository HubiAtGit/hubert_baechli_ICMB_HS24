{
  "hash": "8dab9a3afb08a85a1a20eb68f910bf8b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Beta Distribution\"\nauthor: \"Hubert Baechli\"\n---\n\n\n\n\nLoading some Packages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fitdistrplus)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLade nötiges Paket: MASS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLade nötiges Paket: survival\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(survival)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ dplyr::select() masks MASS::select()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n# set.seed(1)\n```\n:::\n\n\n\n\n# Generating Betakurve Parameter\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta_par <- function(mu, sigma) {\n  mu <- max(mu, 0.0001)\n  mu <- min(mu, 0.9999)\n  sigma <- max(sigma, 0.00001)\n  par <- c(sqrt(mu * (1 - mu))*0.99, sigma)\n  sigma <- min(par)\n  a_b <- (mu * (1 - mu)) / sigma^2 - 1  # calc alpha + beta\n  a <- mu * a_b\n  b <- (1 - mu) * a_b\n  Output <- list(alpha = a,\n                   beta = b)\n  return(Output)\n}\n\nsigma <- 0.1\nmu <- 0.4\n\nbeta_par(mu = mu, sigma = sigma)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$alpha\n[1] 9.2\n\n$beta\n[1] 13.8\n```\n\n\n:::\n:::\n\n\n\n\n# Generating random values\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngen_rbeta <- function(n = n,\n                      mu = mu, \n                      sigma = sigma\n                      ) {\n  par <- beta_par(mu = mu, sigma = sigma)\n  vec <- rbeta(n = 1000, shape1 = par$alpha, shape2 = par$beta)\n\n  return(vec)\n}\n```\n:::\n\n\n\n\n# Testing for different Parameters\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 1000\nm <- 10\n\ndata01 <- data.frame(ID = seq(1,n))  \n\n# Weitere Spalten hinzufügen\nfor (i in seq(0, 10)) {\n  temp <- round(gen_rbeta(n = n, mu = i / m, sigma = 0.1), 3)\n  temp <- sort(temp)\n  name <- sprintf(\"Set%03d\", i)\n  data01[[name]] <- temp\n}\nsummary(data01$Set000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0       0       0       0 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata001 <- pivot_longer(data01,\n                     cols = starts_with(\"Set\"),\n                     names_to = \"Set\",\n                     values_to = \"Values\")\n\nggplot(data = data001, aes(x = ID, y = Values, color = Set))  +\n  geom_line() +\n  ggtitle(\"\") +\n  xlab(\"number\") +\n  labs(color = \"Data Sets\") +\n  theme_light() +\n  theme()\n```\n\n::: {.cell-output-display}\n![](BetaDistribution_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata02 <- data.frame(ID = seq(1,n))  \n\n# Weitere Spalten hinzufügen\nfor (i in seq(0, 10)) {\n  temp <- round(gen_rbeta(n = n, mu = i / m, sigma = 0.5), 3)\n  temp <- sort(temp)\n  name <- sprintf(\"Set%03d\", i)\n  data02[[name]] <- temp\n}\ndata002 <- pivot_longer(data02,\n                     cols = starts_with(\"Set\"),\n                     names_to = \"Set\",\n                     values_to = \"Values\")\n\nggplot(data = data002, aes(x = ID, y = Values, color = Set))  +\n  geom_line() +\n  ggtitle(\"\") +\n  xlab(\"number\") +\n  labs(color = \"Data Sets\") +\n  theme_light() +\n  theme()\n```\n\n::: {.cell-output-display}\n![](BetaDistribution_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata03 <- data.frame(ID = seq(1,n))  \n\n# Weitere Spalten hinzufügen\nfor (i in seq(0, 10)) {\n  temp <- round(gen_rbeta(n = n, mu = 0.5, sigma = i / m), 3)\n  temp <- sort(temp)\n  name <- sprintf(\"Set%03d\", i)\n  data03[[name]] <- temp\n}\ndata003 <- pivot_longer(data03,\n                     cols = starts_with(\"Set\"),\n                     names_to = \"Set\",\n                     values_to = \"Values\")\n\nggplot(data = data003, aes(x = ID, y = Values, color = Set))  +\n  geom_line() +\n  ggtitle(\"\") +\n  xlab(\"number\") +\n  labs(color = \"Data Sets\") +\n  theme_light() +\n  theme()\n```\n\n::: {.cell-output-display}\n![](BetaDistribution_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata04 <- data.frame(ID = seq(1,n))  \n\n# Weitere Spalten hinzufügen\nfor (i in seq(0, 10)) {\n  temp <- round(gen_rbeta(n = n, mu = 0.1, sigma = i / m), 3)\n  temp <- sort(temp)\n  name <- sprintf(\"Set%03d\", i)\n  data04[[name]] <- temp\n}\ndata04 <- pivot_longer(data04,\n                     cols = starts_with(\"Set\"),\n                     names_to = \"Set\",\n                     values_to = \"Values\")\n\nggplot(data = data04, aes(x = ID, y = Values, color = Set))  +\n  geom_line() +\n  ggtitle(\"\") +\n  xlab(\"number\") +\n  labs(color = \"Data Sets\") +\n  theme_light() +\n  theme()\n```\n\n::: {.cell-output-display}\n![](BetaDistribution_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n# Fit Betaparameter\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatah <- data03[, \"Set002\"]\nbeta_par(mu = 0.5, sigma = 2/10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$alpha\n[1] 2.625\n\n$beta\n[1] 2.625\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(datah)\n```\n\n::: {.cell-output-display}\n![](BetaDistribution_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- fitdist(datah, \"beta\", start = list(shape1 = 0.5, shape2 = 0.2))\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFitting of the distribution ' beta ' by maximum likelihood \nParameters:\n       estimate Std. Error\nshape1 2.882962  0.1243341\nshape2 2.796242  0.1202756\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}