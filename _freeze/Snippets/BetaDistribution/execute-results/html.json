{
  "hash": "d9398bec8a84f2e13068314843741a8e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Beta Distribution\"\nauthor: \"Hubert Baechli\"\n\nexecute: \n  cache: false\n---\n\n\n\n\nLoading some Packages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(fitdistrplus)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLade nötiges Paket: MASS\n\nAttache Paket: 'MASS'\n\nDas folgende Objekt ist maskiert 'package:dplyr':\n\n    select\n\nLade nötiges Paket: survival\n```\n\n\n:::\n\n```{.r .cell-code}\n# set.seed(1)\n```\n:::\n\n\n\n\n# Generating Betakurve Parameter\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta_par <- function(mu, sigma) {\n  mu <- max(mu, 1E-6)\n  sigma <- max(sigma, 1E-6)\n  a_b <- mu * (1 - mu) / sigma^2 - 1  # calc alpha + beta\n  a_b <- max(a_b,1E-6)\n  #a_b <- abs(a_b)\n  a <- mu * a_b\n  b <- (1 - mu) * a_b\n  return(list(alpha = a, beta = b))\n}\n\nbeta_par(mu = 0.5, sigma = 0.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$alpha\n[1] 12\n\n$beta\n[1] 12\n```\n\n\n:::\n:::\n\n\n\n\n# Generating random values\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngen_rbeta <- function(n = n,\n                      mu = mu, \n                      sigma = sigma\n                      ) {\n  par <- beta_par(mu = mu, sigma = sigma)\n  data <- rbeta(n = 1000, \n                shape1 = par$alpha, \n                shape2 = par$beta)\n  data <- sort(data)\n\n  return(data)\n}\n\ndata <- gen_rbeta(mu = 0.1, sigma = 0.05)\nbeta_par(mu = 0.1, sigma = 0.05)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$alpha\n[1] 3.5\n\n$beta\n[1] 31.5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.005518 0.062069 0.092919 0.101583 0.132287 0.330234 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(data)\n```\n\n::: {.cell-output-display}\n![](BetaDistribution_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(data)\n```\n\n::: {.cell-output-display}\n![](BetaDistribution_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- fitdist(data, \"beta\", start = list(shape1 = 1, shape2 = 1))\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFitting of the distribution ' beta ' by maximum likelihood \nParameters:\n        estimate Std. Error\nshape1  3.272925  0.1395927\nshape2 28.944226  1.3221470\n```\n\n\n:::\n:::\n",
    "supporting": [
      "BetaDistribution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}